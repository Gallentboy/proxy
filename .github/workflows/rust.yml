name: Rust

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build and upload
    runs-on: windows-latest

    strategy:
      matrix:
        # You can add more, for any target you'd like!
        include:
         # - build: linux
          #  os: ubuntu-latest
          #  target: x86_64-unknown-linux-musl

          #- build: macos
         #   os: macos-latest
         #   target: x86_64-apple-darwin

          - build: windows-gnu
            os: windows-latest
            target: x86_64-pc-windows-msvc
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Please refer to [CHANGELOG.md](https://github.com/f5l5y5/axios-abort/blob/main/CHANGELOG.md) for details.
          draft: false
          prerelease: false

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: '. -> target'
      - name: Build
        shell: bash
        run: |
          cargo build --release --target ${{ matrix.target }}
          
      - name: Build archive
        shell: bash
        run: |
          # Replace with the name of your binary
          binary_name="proxy"

          dirname="$binary_name-${{ matrix.target }}"
          mkdir "$dirname"
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            mv "target/${{ matrix.target }}/release/$binary_name.exe" "$dirname"
          else
            mv "target/${{ matrix.target }}/release/$binary_name" "$dirname"
          fi

          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            7z a "$dirname.zip" "$dirname"
            echo "ASSET=$dirname.zip" >> $GITHUB_ENV
          else
            tar -czf "$dirname.tar.gz" "$dirname"
            echo "ASSET=$dirname.tar.gz" >> $GITHUB_ENV
          fi

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            ${{ env.ASSET }}
  
